# -*- coding: utf-8 -*-
"""GranTarea1_BraitherDiaz.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cfVbyjxcXOKs01R6qebBWipy5tPCe_Jh

# Gran tarea 1

### Parte 1
a) Calcular el valor de la energía potencial gravitacional (Ω⊙) para el caso solar (ecuación 17, “Teoremas
de Newton”). Para ello, tenga en cuenta el modelo solar estándar de Christensen-Dalsgaard (?).
Los datos del modelo pueden ser descargados de: https://users-phys.au.dk/jcd/solar_models/, en la
opción “Limited set of variables for Model S”.

Declaremos algunas librerias útiles:
"""

import pandas as pd
import numpy as nd
from numpy.polynomial import Polynomial
import scipy as sc
import astropy
from astropy import units as u
from astropy import constants as const
import matplotlib.pyplot as plt

"""Comencemos agregando los datos del modelo estandar para poder calcular la energía potencial gravitacional para el Sol $\Omega_⊙$."""

columns = ['r/R', 'c', 'rho', 'p', 'Gamma', 'T']
ModelS = pd.read_table('Downloads/cptrho.l5bi.d.15c', sep='\s+', engine='python', names=columns, skiprows=5) #Leemos los datos

#Sin embargo no necesitamos todos los datos, solo r/R y rho. Y además, queremos r no r/R, entonces:

R = (const.R_sun).cgs    #El radio del sol en unidades cgs
RS4 = ModelS['r/R']*R    #Estos valores estan invertidos, r comienza en su valor máximo y disminuye hasta cero.
RS3 = RS4.iloc[::-1]     #Por lo que aquí invierto el orden de r y rho.
RS2 = nd.asarray(RS3)
RR = pd.DataFrame(RS2)
r = RR[0]                #Estos son los valores del radio que se utilizaran (luego de haber invertido el orden y pasando a unidades cgs)

RHO4 = ModelS['rho']     #Estos también estan invertidos
RHO3 = RHO4.iloc[::-1]
RHO2 = nd.asarray(RHO3)
RHO = pd.DataFrame(RHO2)
rho = RHO[0]             #Valores de rho que se utilizaran (luego de haber invertido el orden)

Gcgs = (const.G).cgs     #Constante de Cavendish en unidades cgs.
Msol = (const.M_sun).cgs #Masa del Sol en cgs
Rsol = (const.R_sun).cgs #Radio del Sol en cgs
k_b  = const.k_B         #Constante de Boltzmann
m_H  = (1.6736*10**-27)*u.kg #Masa del hidrógeno en kilogramos
a    = (7.56 * 10**-16) *u.J*u.m**-3*u.K**-4 #La constante a vista en clase. ('Teoremas del equilibrio', pag 13)

"""Queremos calcular la siguiente integral:

$$\Omega_⊙ = \int_{0}^{R_⊙}\frac{GM(r')dM(r')}{r'}$$

O también:

$$\Omega_⊙ = -4\pi G \int_{0}^{R_⊙} \rho(r') M(r') r' dr'$$

Sin embargo, no conocemos a priori como es $M(r)$ (el modelo no nos otorga este valor de forma explícita o directa), por lo tanto, es adecuado determinar en primer lugar los valores de $M(r)$. Para esto, utilizamos la expresión de continuidad de la masa vista en clase ('Teoremas del equilibrio', pag 6):

$$ \frac{dM(r)}{dr} = 4\pi r^2\rho(r)$$

De esta forma:

$$ M(r) = 4\pi \int_{0}^{r}r'^2\rho(r')dr'$$

Para realizar esta integración definimos una función $f(r, \rho) = 4\pi r^2 \rho$
"""

def f(r, rho):
    r2 = r**2
    Rrho = 4*nd.pi*r2*rho
    return (Rrho)

"""Y obtenemos $M(r)$:"""

y = f(r, rho)
MR = pd.DataFrame(sc.integrate.cumulative_trapezoid(y, r, initial=0))
Mr = MR[0]

"""Ahora, con los valores de M(r), podemos calcular $\Omega_⊙$:"""

def g(x, y, z):
    return -1*4*nd.pi*Gcgs*x*y*z
y1 = g(r, rho, Mr)

Omega = sc.integrate.trapz(y1, r)
Omega

"""b) Calcular:

$$\frac{GM^2_⊙}{R_⊙}$$

Donde $M_⊙$ y $R_⊙$ son respectivamente la masa y radio del Sol. Comparar este resultado con el
obtenido en el numeral anterior. ¿Qué conclusión puede sacar de la diferencia entre ambos?

Despues de haber obtenido el valor de $\Omega_⊙$ a través de integración númerica, ahora procedemos a calcular directamente $\frac{GM^2_⊙}{R_⊙}$.
"""

Omega1 = nd.float64((Gcgs*Msol**2)/Rsol).item()
Omega1

"""$$\frac{GM^2_⊙}{R_⊙} = 3.7931109×10^{48} \frac{cm^2g}{s^2}$$
De la diferencia entre ambos valores se obtiene:
"""

Omega2 = nd.float64(Omega)
dif = -Omega - Omega1

"""$$ \Omega_⊙ - \frac{GM^2_⊙}{R_⊙} = 2.3171226×10^{48} \frac{cm^2g}{s^2}$$

Una conclusión rápida que se puede obtener de estos valores es que son bastante diferentes a pesar de coincidir en orden de magnitud. Lo cual concuerda con la proposición 8 vista en clase, donde:

$$ \frac{3}{6-\nu}\frac{GM^2_*}{R^\nu_*}\leq I_\nu\ \leq \frac{3}{6-\nu} \frac{GM^2_*}{r^\nu_c} , \nu<6$$

Este caso es cuando $\nu = 1$ y tenemos que:

$$ \frac{3}{5}\frac{GM^2_*}{R_*}\leq -\Omega_*\ $$

Para el caso solar:
$$ \frac{3}{5}\frac{GM^2_⊙}{R_⊙}\leq -\Omega_⊙\ $$

Que concuerda con los resultados obtenidos.

c) Calcular

$$ q = \frac{\Omega_⊙}{\frac{GM^2_⊙}{R_⊙}}$$
"""

q = Omega/Omega1
q

"""Obtenemos lo siguiente:

$$q = -1.6109$$

### Parte 2

Teorema 7: Para una configuración en equilibrio, dado μc, encuentre la cota superior de la fracción
de la presión de radiación en el centro, $1 − β^⋆$, dado por (Chandrasekhar, 1967):

$$M_* = \left(\frac{6}{\pi}\right)^{1/2}G^{-3/2} \left[\left(\frac{3}{a}\right)\left(\frac{k_b}{\mu_c m_H}\right)^{4} \frac{1-\beta_*}{\beta_*^4} \right]^{1/2}$$

Siguiendo las sugerencias:

$$m = \frac{M_*}{M_⊙}$$ $$x = 1 - \beta_*$$

De esta forma se debe graficar, para diversos valores de $\mu_c (0.5 \leq \mu_c \leq 2)$, x en función de la masa m. Tenemos la siguiente relación funcional:

$$ \mu_c^4 m^2 = A \frac{x}{(1-x)^4}$$

$$(1-x)^4\mu_c^4m^2 - Ax = 0$$
"""

A = nd.float64((18*k_b**4)/(a*nd.pi*(m_H**4)*(const.M_sun**2)*(const.G**3)))
mu_c = [0.5, 0.7, 1.0, 1.2, 1.5, 2.0]
mt = nd.array(range(215))
y = nd.zeros(len(mt))
g = nd.zeros(len(mt))
for mu in mu_c:
    for m in range(len(mt)):
        if m>0:
            D = A/((mu**4)*(m**2))
            c4 = -1*(4 + D)
            coef = [1, -4, 6, c4, 1]
            roots = nd.roots(coef)
            y[m] = roots[3]
        g[m] = 0.5
    label = 'µ_c = '+ str(mu)
    plt.plot(mt, y, label=label)
plt.xlabel('M/M⊙')
plt.ylabel('x = 1 - ß∗')
plt.title('Fracción de presión de radiación de una configuración en relación a su masa')
plt.plot(mt, g, 'b--', label='ß = 0.5')
plt.grid()
plt.legend()
plt.show()

"""Es posible observar que los valores de la razón de presión de radiación a la presión total para configuraciones muy masivas tienden a ser 1 para cualquier valor de $\mu_c$. Sin embargo, entre mayor es $\mu_c$ menor masa requiere la configuración para sobrepasar el valor de $x=0.5$ que indica que la presión de radiación aporta la mitad de la presión total. Teniendo en cuenta la proposición 7 vista en clase:

$$ 1-\beta_c \leq 1-\beta_*$$

La razón de la presión de la radiación a la presión total en el centro de una configuración estará siempre acotada superiormente por la razón de la presión de la radiación a la presión total de toda la configuración.

Se observa que entre mayor masa, la fracción entre la presión de radiación y la de gas ($\beta_*$) tiende a ser menor. Teniendo en cuenta que entre mayor sea la masa de la configuración, también lo será la cantidad de gas, el resultado obtenido parece indicar que la presión debida al gas va a dominar sobre la presión de radiación.
"""

